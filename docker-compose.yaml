version: '3'
services:
  db:
    container_name: my_db
    build:
      context: ./db
      dockerfile: DockerFile
    volumes:
      - ./db/pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    env_file:
      - ./api/.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/pgdata

  api:
    container_name: my_api
    build:
      context: ./api
      dockerfile: DockerFile
      args:
        app_env: ${APP_ENV}
    volumes:
      - ./api:/go/src/golang-docker-postgre-pgadmin-example/api
    ports:
      - '5000:8080'
    depends_on:
      - db

  frontend:
    container_name: my_frontend
    build:
      context: ./frontend
      dockerfile: DockerFile
      args:
        app_env: ${APP_ENV}
    volumes:
      - ./frontend/src:/frontend/src
    ports:
      - '3000:3000'

  pgadmin:
    container_name: my_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGAdminDefaultEmail}
      PGADMIN_DEFAULT_PASSWORD: ${PGAdminDefaultPassword}
    depends_on:
      - db
    ports:
      - '5050:80'
    restart: unless-stopped
